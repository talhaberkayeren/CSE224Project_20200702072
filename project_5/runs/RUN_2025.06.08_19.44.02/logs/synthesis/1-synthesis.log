
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /home/talha/volare_pdks/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openlane/designs/project_5/src/instructionMemory.v
Parsing SystemVerilog input from `/openlane/designs/project_5/src/instructionMemory.v' to AST representation.
Storing AST representation for module `$abstract\instructionMemory'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openlane/designs/project_5/src/alu.v
Parsing SystemVerilog input from `/openlane/designs/project_5/src/alu.v' to AST representation.
Storing AST representation for module `$abstract\alu'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openlane/designs/project_5/src/controlUnit.v
Parsing SystemVerilog input from `/openlane/designs/project_5/src/controlUnit.v' to AST representation.
Storing AST representation for module `$abstract\controlUnit'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openlane/designs/project_5/src/instructionDecoder.v
Parsing SystemVerilog input from `/openlane/designs/project_5/src/instructionDecoder.v' to AST representation.
Storing AST representation for module `$abstract\instructionDecoder'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openlane/designs/project_5/src/sevenSegmentConverter.v
Parsing SystemVerilog input from `/openlane/designs/project_5/src/sevenSegmentConverter.v' to AST representation.
Storing AST representation for module `$abstract\sevenSegmentConverter'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /openlane/designs/project_5/src/registerFile.v
Parsing SystemVerilog input from `/openlane/designs/project_5/src/registerFile.v' to AST representation.
Storing AST representation for module `$abstract\registerFile'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /openlane/designs/project_5/src/clockDivider.v
Parsing SystemVerilog input from `/openlane/designs/project_5/src/clockDivider.v' to AST representation.
Storing AST representation for module `$abstract\clockDivider'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /openlane/designs/project_5/src/cpu_top.v
Parsing SystemVerilog input from `/openlane/designs/project_5/src/cpu_top.v' to AST representation.
Storing AST representation for module `$abstract\cpu_top'.
Successfully finished Verilog frontend.

10. Executing HIERARCHY pass (managing design hierarchy).

11. Executing AST frontend in derive mode using pre-parsed AST for module `\cpu_top'.
Generating RTLIL representation for module `\cpu_top'.

11.1. Analyzing design hierarchy..
Top module:  \cpu_top

11.2. Executing AST frontend in derive mode using pre-parsed AST for module `\sevenSegmentConverter'.
Generating RTLIL representation for module `\sevenSegmentConverter'.

11.3. Executing AST frontend in derive mode using pre-parsed AST for module `\alu'.
Generating RTLIL representation for module `\alu'.

11.4. Executing AST frontend in derive mode using pre-parsed AST for module `\registerFile'.
Generating RTLIL representation for module `\registerFile'.

11.5. Executing AST frontend in derive mode using pre-parsed AST for module `\controlUnit'.
Generating RTLIL representation for module `\controlUnit'.

11.6. Executing AST frontend in derive mode using pre-parsed AST for module `\instructionDecoder'.
Generating RTLIL representation for module `\instructionDecoder'.

11.7. Executing AST frontend in derive mode using pre-parsed AST for module `\instructionMemory'.
Generating RTLIL representation for module `\instructionMemory'.

11.8. Executing AST frontend in derive mode using pre-parsed AST for module `\clockDivider'.
Generating RTLIL representation for module `\clockDivider'.

11.9. Analyzing design hierarchy..
Top module:  \cpu_top
Used module:     \sevenSegmentConverter
Used module:     \alu
Used module:     \registerFile
Used module:     \controlUnit
Used module:     \instructionDecoder
Used module:     \instructionMemory
Used module:     \clockDivider

11.10. Analyzing design hierarchy..
Top module:  \cpu_top
Used module:     \sevenSegmentConverter
Used module:     \alu
Used module:     \registerFile
Used module:     \controlUnit
Used module:     \instructionDecoder
Used module:     \instructionMemory
Used module:     \clockDivider
Removing unused module `$abstract\cpu_top'.
Removing unused module `$abstract\clockDivider'.
Removing unused module `$abstract\registerFile'.
Removing unused module `$abstract\sevenSegmentConverter'.
Removing unused module `$abstract\instructionDecoder'.
Removing unused module `$abstract\controlUnit'.
Removing unused module `$abstract\alu'.
Removing unused module `$abstract\instructionMemory'.
Removed 8 unused modules.

12. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/project_5/runs/RUN_2025.06.08_19.44.02/tmp/synthesis/hierarchy.dot'.
Dumping module cpu_top to page 1.
Renaming module cpu_top to cpu_top.

13. Executing TRIBUF pass.

14. Executing HIERARCHY pass (managing design hierarchy).

14.1. Analyzing design hierarchy..
Top module:  \cpu_top
Used module:     \sevenSegmentConverter
Used module:     \alu
Used module:     \registerFile
Used module:     \controlUnit
Used module:     \instructionDecoder
Used module:     \instructionMemory
Used module:     \clockDivider

14.2. Analyzing design hierarchy..
Top module:  \cpu_top
Used module:     \sevenSegmentConverter
Used module:     \alu
Used module:     \registerFile
Used module:     \controlUnit
Used module:     \instructionDecoder
Used module:     \instructionMemory
Used module:     \clockDivider
Removed 0 unused modules.

15. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `instructionMemory.$proc$/openlane/designs/project_5/src/instructionMemory.v:0$52'.
Cleaned up 0 empty switches.

16. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openlane/designs/project_5/src/controlUnit.v:14$45 in module controlUnit.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/project_5/src/registerFile.v:13$30 in module registerFile.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/project_5/src/alu.v:7$21 in module alu.
Removed 1 dead cases from process $proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2 in module sevenSegmentConverter.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2 in module sevenSegmentConverter.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/project_5/src/clockDivider.v:11$53 in module clockDivider.
Removed a total of 1 dead cases.

17. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 18 assignments to connections.

18. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\controlUnit.$proc$/openlane/designs/project_5/src/controlUnit.v:0$49'.
  Set init value: \regWrite = 1'0
Found init rule in `\sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:0$20'.
  Set init value: \digit_counter = 4'0000
Found init rule in `\clockDivider.$proc$/openlane/designs/project_5/src/clockDivider.v:0$57'.
  Set init value: \slowClock = 1'0
  Set init value: \counter = 20'00000000000000000000

19. Executing PROC_ARST pass (detect async resets in processes).

20. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~6 debug messages>

21. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\controlUnit.$proc$/openlane/designs/project_5/src/controlUnit.v:0$49'.
Creating decoders for process `\controlUnit.$proc$/openlane/designs/project_5/src/controlUnit.v:14$45'.
     1/1: $1\aluControl[2:0]
Creating decoders for process `\registerFile.$proc$/openlane/designs/project_5/src/registerFile.v:0$42'.
Creating decoders for process `\registerFile.$proc$/openlane/designs/project_5/src/registerFile.v:13$30'.
     1/6: $2$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$40
     2/6: $2$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_DATA[31:0]$39
     3/6: $2$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_ADDR[4:0]$38
     4/6: $1$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$36
     5/6: $1$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_DATA[31:0]$35
     6/6: $1$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_ADDR[4:0]$34
Creating decoders for process `\alu.$proc$/openlane/designs/project_5/src/alu.v:7$21'.
     1/1: $1\aluResult[31:0]
Creating decoders for process `\sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:0$20'.
Creating decoders for process `\sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2'.
     1/4: $1\cx[7:0]
     2/4: $1\temp[31:0]
     3/4: $1\current_digit[3:0]
     4/4: $1\an[7:0]
Creating decoders for process `\clockDivider.$proc$/openlane/designs/project_5/src/clockDivider.v:0$57'.
Creating decoders for process `\clockDivider.$proc$/openlane/designs/project_5/src/clockDivider.v:11$53'.
     1/2: $1\counter[19:0]
     2/2: $1\slowClock[0:0]

22. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\registerFile.$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:12$26_EN' from process `\registerFile.$proc$/openlane/designs/project_5/src/registerFile.v:0$42'.
Latch inferred for signal `\alu.\aluResult' from process `\alu.$proc$/openlane/designs/project_5/src/alu.v:7$21': $auto$proc_dlatch.cc:427:proc_dlatch$138

23. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\controlUnit.\aluControl' using process `\controlUnit.$proc$/openlane/designs/project_5/src/controlUnit.v:14$45'.
  created $dff cell `$procdff$167' with positive edge clock.
Creating register for signal `\controlUnit.\regWrite' using process `\controlUnit.$proc$/openlane/designs/project_5/src/controlUnit.v:14$45'.
  created $dff cell `$procdff$168' with positive edge clock.
Creating register for signal `\registerFile.$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_ADDR' using process `\registerFile.$proc$/openlane/designs/project_5/src/registerFile.v:13$30'.
  created $dff cell `$procdff$169' with positive edge clock.
Creating register for signal `\registerFile.$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_DATA' using process `\registerFile.$proc$/openlane/designs/project_5/src/registerFile.v:13$30'.
  created $dff cell `$procdff$170' with positive edge clock.
Creating register for signal `\registerFile.$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN' using process `\registerFile.$proc$/openlane/designs/project_5/src/registerFile.v:13$30'.
  created $dff cell `$procdff$171' with positive edge clock.
Creating register for signal `\sevenSegmentConverter.\an' using process `\sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2'.
  created $dff cell `$procdff$172' with positive edge clock.
Creating register for signal `\sevenSegmentConverter.\cx' using process `\sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2'.
  created $dff cell `$procdff$173' with positive edge clock.
Creating register for signal `\sevenSegmentConverter.\temp' using process `\sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2'.
  created $dff cell `$procdff$174' with positive edge clock.
Creating register for signal `\sevenSegmentConverter.\digit_counter' using process `\sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2'.
  created $dff cell `$procdff$175' with positive edge clock.
Creating register for signal `\sevenSegmentConverter.\current_digit' using process `\sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2'.
  created $dff cell `$procdff$176' with positive edge clock.
Creating register for signal `\clockDivider.\slowClock' using process `\clockDivider.$proc$/openlane/designs/project_5/src/clockDivider.v:11$53'.
  created $dff cell `$procdff$177' with positive edge clock.
Creating register for signal `\clockDivider.\counter' using process `\clockDivider.$proc$/openlane/designs/project_5/src/clockDivider.v:11$53'.
  created $dff cell `$procdff$178' with positive edge clock.

24. Executing PROC_MEMWR pass (convert process memory writes to cells).

25. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `controlUnit.$proc$/openlane/designs/project_5/src/controlUnit.v:0$49'.
Found and cleaned up 1 empty switch in `\controlUnit.$proc$/openlane/designs/project_5/src/controlUnit.v:14$45'.
Removing empty process `controlUnit.$proc$/openlane/designs/project_5/src/controlUnit.v:14$45'.
Removing empty process `registerFile.$proc$/openlane/designs/project_5/src/registerFile.v:0$42'.
Found and cleaned up 2 empty switches in `\registerFile.$proc$/openlane/designs/project_5/src/registerFile.v:13$30'.
Removing empty process `registerFile.$proc$/openlane/designs/project_5/src/registerFile.v:13$30'.
Found and cleaned up 1 empty switch in `\alu.$proc$/openlane/designs/project_5/src/alu.v:7$21'.
Removing empty process `alu.$proc$/openlane/designs/project_5/src/alu.v:7$21'.
Removing empty process `sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:0$20'.
Found and cleaned up 2 empty switches in `\sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2'.
Removing empty process `sevenSegmentConverter.$proc$/openlane/designs/project_5/src/sevenSegmentConverter.v:31$2'.
Removing empty process `clockDivider.$proc$/openlane/designs/project_5/src/clockDivider.v:0$57'.
Found and cleaned up 1 empty switch in `\clockDivider.$proc$/openlane/designs/project_5/src/clockDivider.v:11$53'.
Removing empty process `clockDivider.$proc$/openlane/designs/project_5/src/clockDivider.v:11$53'.
Cleaned up 7 empty switches.

26. Executing CHECK pass (checking for obvious problems).
Checking module cpu_top...
Checking module instructionMemory...
Checking module instructionDecoder...
Checking module controlUnit...
Checking module registerFile...
Checking module alu...
Checking module sevenSegmentConverter...
Checking module clockDivider...
Found and reported 0 problems.

27. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
Optimizing module instructionMemory.
Optimizing module instructionDecoder.
Optimizing module controlUnit.
<suppressed ~1 debug messages>
Optimizing module registerFile.
<suppressed ~1 debug messages>
Optimizing module alu.
<suppressed ~7 debug messages>
Optimizing module sevenSegmentConverter.
<suppressed ~3 debug messages>
Optimizing module clockDivider.

28. Executing FLATTEN pass (flatten design).
Deleting now unused module instructionMemory.
Deleting now unused module instructionDecoder.
Deleting now unused module controlUnit.
Deleting now unused module registerFile.
Deleting now unused module alu.
Deleting now unused module sevenSegmentConverter.
Deleting now unused module clockDivider.
<suppressed ~7 debug messages>

29. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~1 debug messages>

30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 7 unused cells and 62 unused wires.
<suppressed ~10 debug messages>

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\U5.$procmux$72.
    dead port 2/2 on $mux $flatten\U5.$procmux$78.
    dead port 2/2 on $mux $flatten\U5.$procmux$84.
Removed 3 multiplexer ports.
<suppressed ~11 debug messages>

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
    New ctrl vector for $pmux cell $flatten\U6.$procmux$96: { $flatten\U6.$procmux$99_CMP $flatten\U6.$procmux$98_CMP $flatten\U6.$procmux$97_CMP }
    New ctrl vector for $pmux cell $flatten\U7.$procmux$103: { $flatten\U7.$procmux$111_CMP $auto$opt_reduce.cc:134:opt_pmux$181 }
    New ctrl vector for $pmux cell $flatten\U7.$procmux$113: { $flatten\U7.$procmux$111_CMP $auto$opt_reduce.cc:134:opt_pmux$183 }
    Consolidated identical input bits for $mux cell $flatten\U5.$procmux$70:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\U5.$procmux$70_Y
      New ports: A=1'0, B=1'1, Y=$flatten\U5.$procmux$70_Y [0]
      New connections: $flatten\U5.$procmux$70_Y [31:1] = { $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] $flatten\U5.$procmux$70_Y [0] }
  Optimizing cells in module \cpu_top.
    Consolidated identical input bits for $mux cell $flatten\U5.$procmux$87:
      Old ports: A=0, B=$flatten\U5.$2$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$40, Y=$flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33
      New ports: A=1'0, B=$flatten\U5.$procmux$70_Y [0], Y=$flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0]
      New connections: $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [31:1] = { $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] $flatten\U5.$0$memwr$\memory$/openlane/designs/project_5/src/registerFile.v:15$27_EN[31:0]$33 [0] }
  Optimizing cells in module \cpu_top.
Performed a total of 5 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.6. Executing OPT_DFF pass (perform DFF optimizations).

31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

31.9. Rerunning OPT passes. (Maybe there is more to do..)

31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
Performed a total of 0 changes.

31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

31.13. Executing OPT_DFF pass (perform DFF optimizations).

31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

31.16. Finished OPT passes. (There is nothing left to do.)

32. Executing FSM pass (extract and optimize FSM).

32.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking cpu_top.U4.aluControl as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking cpu_top.U7.an as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

32.2. Executing FSM_EXTRACT pass (extracting FSM from design).

32.3. Executing FSM_OPT pass (simple optimizations of FSMs).

32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

32.5. Executing FSM_OPT pass (simple optimizations of FSMs).

32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\U7.$procdff$174 ($dff) from module cpu_top (D = $flatten\U7.$0\temp[31:0], Q = \U7.temp).
Adding EN signal on $flatten\U7.$procdff$172 ($dff) from module cpu_top (D = $flatten\U7.$0\an[7:0], Q = \U7.an).
Adding SRST signal on $flatten\U1.$procdff$178 ($dff) from module cpu_top (D = $flatten\U1.$add$/openlane/designs/project_5/src/clockDivider.v:18$56_Y [19:0], Q = \U1.counter, rval = 20'00000000000000000000).
Adding EN signal on $flatten\U1.$procdff$177 ($dff) from module cpu_top (D = $flatten\U1.$not$/openlane/designs/project_5/src/clockDivider.v:14$55_Y, Q = \U1.slowClock).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~2 debug messages>

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

33.16. Finished OPT passes. (There is nothing left to do.)

34. Executing WREDUCE pass (reducing word size of cells).
Removed top 24 address bits (of 32) from memory init port cpu_top.$flatten\U2.$meminit$\instructions$/openlane/designs/project_5/src/instructionMemory.v:0$51 (U2.instructions).
Removed top 27 address bits (of 32) from memory init port cpu_top.$flatten\U5.$meminit$\memory$/openlane/designs/project_5/src/registerFile.v:12$41 (U5.memory).
Removed top 28 address bits (of 32) from memory init port cpu_top.$flatten\U7.$auto$mem.cc:328:emit$61 ($flatten\U7.$auto$proc_rom.cc:150:do_switch$59).
Removed top 28 bits (of 32) from port B of cell cpu_top.$flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:38$4 ($div).
Removed top 28 bits (of 32) from port B of cell cpu_top.$flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:44$6 ($div).
Removed top 28 bits (of 32) from port B of cell cpu_top.$flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:37$3 ($mod).
Removed top 28 bits (of 32) from port B of cell cpu_top.$flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:43$5 ($mod).
Removed top 31 bits (of 32) from port B of cell cpu_top.$flatten\U1.$add$/openlane/designs/project_5/src/clockDivider.v:18$56 ($add).
Removed top 12 bits (of 32) from port Y of cell cpu_top.$flatten\U1.$add$/openlane/designs/project_5/src/clockDivider.v:18$56 ($add).
Removed top 6 bits (of 20) from port B of cell cpu_top.$flatten\U1.$eq$/openlane/designs/project_5/src/clockDivider.v:12$54 ($eq).
Removed top 1 bits (of 3) from port B of cell cpu_top.$flatten\U4.$procmux$66_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell cpu_top.$flatten\U4.$procmux$65_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell cpu_top.$flatten\U7.$procmux$110_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell cpu_top.$flatten\U7.$procmux$109_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell cpu_top.$flatten\U7.$procmux$108_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpu_top.$flatten\U7.$procmux$107_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpu_top.$flatten\U7.$procmux$106_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpu_top.$flatten\U7.$procmux$105_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell cpu_top.$flatten\U7.$procmux$104_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell cpu_top.$flatten\U7.$add$/openlane/designs/project_5/src/sevenSegmentConverter.v:104$19 ($add).
Removed top 28 bits (of 32) from port Y of cell cpu_top.$flatten\U7.$add$/openlane/designs/project_5/src/sevenSegmentConverter.v:104$19 ($add).
Removed top 12 bits (of 32) from wire cpu_top.$flatten\U1.$add$/openlane/designs/project_5/src/clockDivider.v:18$56_Y.

35. Executing PEEPOPT pass (run peephole optimizers).

36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

37. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module cpu_top:
  creating $macc model for $flatten\U1.$add$/openlane/designs/project_5/src/clockDivider.v:18$56 ($add).
  creating $macc model for $flatten\U6.$add$/openlane/designs/project_5/src/alu.v:9$22 ($add).
  creating $macc model for $flatten\U6.$sub$/openlane/designs/project_5/src/alu.v:10$23 ($sub).
  creating $macc model for $flatten\U7.$add$/openlane/designs/project_5/src/sevenSegmentConverter.v:104$19 ($add).
  creating $alu model for $macc $flatten\U7.$add$/openlane/designs/project_5/src/sevenSegmentConverter.v:104$19.
  creating $alu model for $macc $flatten\U6.$sub$/openlane/designs/project_5/src/alu.v:10$23.
  creating $alu model for $macc $flatten\U6.$add$/openlane/designs/project_5/src/alu.v:9$22.
  creating $alu model for $macc $flatten\U1.$add$/openlane/designs/project_5/src/clockDivider.v:18$56.
  creating $alu cell for $flatten\U1.$add$/openlane/designs/project_5/src/clockDivider.v:18$56: $auto$alumacc.cc:485:replace_alu$193
  creating $alu cell for $flatten\U6.$add$/openlane/designs/project_5/src/alu.v:9$22: $auto$alumacc.cc:485:replace_alu$196
  creating $alu cell for $flatten\U6.$sub$/openlane/designs/project_5/src/alu.v:10$23: $auto$alumacc.cc:485:replace_alu$199
  creating $alu cell for $flatten\U7.$add$/openlane/designs/project_5/src/sevenSegmentConverter.v:104$19: $auto$alumacc.cc:485:replace_alu$202
  created 4 $alu and 0 $macc cells.

38. Executing SHARE pass (SAT-based resource sharing).
Found 8 cells in module cpu_top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:43$5 ($mod):
    Found 1 activation_patterns using ctrl signal $auto$opt_reduce.cc:134:opt_pmux$181.
    Found 1 candidates: $flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:37$3
    Analyzing resource sharing with $flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:37$3 ($mod):
      Found 1 activation_patterns using ctrl signal $flatten\U7.$procmux$111_CMP.
      Activation pattern for cell $flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:43$5: $auto$opt_reduce.cc:134:opt_pmux$181 = 1'1
      Activation pattern for cell $flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:37$3: $flatten\U7.$procmux$111_CMP = 1'1
      Size of SAT problem: 0 cells, 70 variables, 199 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:43$5: $auto$share.cc:977:make_cell_activation_logic$205
      New cell: $auto$share.cc:667:make_supercell$212 ($mod)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$212 ($mod):
    Found 2 activation_patterns using ctrl signal { $flatten\U7.$procmux$111_CMP $auto$opt_reduce.cc:134:opt_pmux$181 }.
    No candidates found.
  Analyzing resource sharing options for $flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:44$6 ($div):
    Found 1 activation_patterns using ctrl signal $auto$opt_reduce.cc:134:opt_pmux$181.
    Found 1 candidates: $flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:38$4
    Analyzing resource sharing with $flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:38$4 ($div):
      Found 1 activation_patterns using ctrl signal $flatten\U7.$procmux$111_CMP.
      Activation pattern for cell $flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:44$6: $auto$opt_reduce.cc:134:opt_pmux$181 = 1'1
      Activation pattern for cell $flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:38$4: $flatten\U7.$procmux$111_CMP = 1'1
      Size of SAT problem: 0 cells, 70 variables, 199 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:44$6: $auto$share.cc:977:make_cell_activation_logic$215
      New cell: $auto$share.cc:667:make_supercell$222 ($div)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$222 ($div):
    Found 2 activation_patterns using ctrl signal { $flatten\U7.$procmux$111_CMP $auto$opt_reduce.cc:134:opt_pmux$181 }.
    No candidates found.
  Analyzing resource sharing options for $flatten\U6.$shr$/openlane/designs/project_5/src/alu.v:12$25 ($shr):
    Found 1 activation_patterns using ctrl signal $flatten\U6.$procmux$97_CMP.
    No candidates found.
  Analyzing resource sharing options for $flatten\U6.$shl$/openlane/designs/project_5/src/alu.v:11$24 ($shl):
    Found 1 activation_patterns using ctrl signal $flatten\U6.$procmux$98_CMP.
    No candidates found.
  Analyzing resource sharing options for $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:9$28 ($memrd):
    Found 4 activation_patterns using ctrl signal { $flatten\U6.$procmux$97_CMP $flatten\U6.$procmux$98_CMP $flatten\U6.$procmux$99_CMP }.
    Found 1 candidates: $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:10$29
    Analyzing resource sharing with $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:10$29 ($memrd):
      Found 4 activation_patterns using ctrl signal { $flatten\U6.$procmux$97_CMP $flatten\U6.$procmux$98_CMP $flatten\U6.$procmux$99_CMP \U2.RD [5] }.
      Activation pattern for cell $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:9$28: { $flatten\U6.$procmux$97_CMP $flatten\U6.$procmux$98_CMP $flatten\U6.$procmux$99_CMP } = 3'000
      Activation pattern for cell $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:9$28: $flatten\U6.$procmux$98_CMP = 1'1
      Activation pattern for cell $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:9$28: $flatten\U6.$procmux$97_CMP = 1'1
      Activation pattern for cell $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:9$28: $flatten\U6.$procmux$99_CMP = 1'1
      Activation pattern for cell $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:10$29: { $flatten\U6.$procmux$99_CMP \U2.RD [5] } = 2'11
      Activation pattern for cell $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:10$29: { $flatten\U6.$procmux$97_CMP \U2.RD [5] } = 2'11
      Activation pattern for cell $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:10$29: { $flatten\U6.$procmux$98_CMP \U2.RD [5] } = 2'11
      Activation pattern for cell $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:10$29: { $flatten\U6.$procmux$97_CMP $flatten\U6.$procmux$98_CMP $flatten\U6.$procmux$99_CMP \U2.RD [5] } = 4'0001
      Size of SAT problem: 0 cells, 58 variables, 163 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\U6.$procmux$97_CMP $flatten\U6.$procmux$98_CMP $flatten\U6.$procmux$99_CMP \U2.RD [5] } = 4'0001
  Analyzing resource sharing options for $flatten\U5.$memrd$\memory$/openlane/designs/project_5/src/registerFile.v:10$29 ($memrd):
    Found 4 activation_patterns using ctrl signal { $flatten\U6.$procmux$97_CMP $flatten\U6.$procmux$98_CMP $flatten\U6.$procmux$99_CMP \U2.RD [5] }.
    No candidates found.
Removing 4 cells in module cpu_top:
  Removing cell $flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:38$4 ($div).
  Removing cell $flatten\U7.$div$/openlane/designs/project_5/src/sevenSegmentConverter.v:44$6 ($div).
  Removing cell $flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:37$3 ($mod).
  Removing cell $flatten\U7.$mod$/openlane/designs/project_5/src/sevenSegmentConverter.v:43$5 ($mod).

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~4 debug messages>

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
    New ctrl vector for $pmux cell $flatten\U7.$procmux$103: $auto$opt_reduce.cc:134:opt_pmux$226
    New ctrl vector for $pmux cell $flatten\U7.$procmux$113: $auto$opt_reduce.cc:134:opt_pmux$228
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$225: { $flatten\U7.$procmux$104_CMP $flatten\U7.$procmux$105_CMP $flatten\U7.$procmux$106_CMP $flatten\U7.$procmux$107_CMP $flatten\U7.$procmux$108_CMP $flatten\U7.$procmux$109_CMP $flatten\U7.$procmux$110_CMP $flatten\U7.$procmux$111_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$227: { $flatten\U7.$procmux$104_CMP $flatten\U7.$procmux$105_CMP $flatten\U7.$procmux$106_CMP $flatten\U7.$procmux$107_CMP $flatten\U7.$procmux$108_CMP $flatten\U7.$procmux$109_CMP $flatten\U7.$procmux$110_CMP $flatten\U7.$procmux$111_CMP }
  Optimizing cells in module \cpu_top.
Performed a total of 4 changes.

39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

39.6. Executing OPT_DFF pass (perform DFF optimizations).

39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~3 debug messages>

39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

39.9. Rerunning OPT passes. (Maybe there is more to do..)

39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
Performed a total of 0 changes.

39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

39.13. Executing OPT_DFF pass (perform DFF optimizations).

39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

39.16. Finished OPT passes. (There is nothing left to do.)

40. Executing MEMORY pass.

40.1. Executing OPT_MEM pass (optimize memories).
cpu_top.$flatten\U7.$auto$proc_rom.cc:150:do_switch$59: removing const-1 lane 0
cpu_top.U2.instructions: removing const-1 lane 0
cpu_top.U2.instructions: removing const-1 lane 1
cpu_top.U2.instructions: removing const-0 lane 2
cpu_top.U2.instructions: removing const-0 lane 3
cpu_top.U2.instructions: removing const-1 lane 4
cpu_top.U2.instructions: removing const-0 lane 6
cpu_top.U2.instructions: removing const-0 lane 14
cpu_top.U2.instructions: removing const-0 lane 17
cpu_top.U2.instructions: removing const-0 lane 24
cpu_top.U2.instructions: removing const-0 lane 25
cpu_top.U2.instructions: removing const-0 lane 26
cpu_top.U2.instructions: removing const-0 lane 27
cpu_top.U2.instructions: removing const-0 lane 28
cpu_top.U2.instructions: removing const-0 lane 29
cpu_top.U2.instructions: removing const-0 lane 30
cpu_top.U2.instructions: removing const-0 lane 31
Performed a total of 2 transformations.

40.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

40.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing cpu_top.U5.memory write port 0.

40.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

40.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\U7.$auto$proc_rom.cc:150:do_switch$59'[0] in module `\cpu_top': merging output FF to cell.
Checking read port `\U2.instructions'[0] in module `\cpu_top': no output FF found.
Checking read port `\U5.memory'[0] in module `\cpu_top': no output FF found.
Checking read port `\U5.memory'[1] in module `\cpu_top': no output FF found.
Checking read port address `\U2.instructions'[0] in module `\cpu_top': no address FF found.
Checking read port address `\U5.memory'[0] in module `\cpu_top': no address FF found.
Checking read port address `\U5.memory'[1] in module `\cpu_top': no address FF found.

40.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

40.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory cpu_top.U5.memory by address:

40.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

40.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

40.10. Executing MEMORY_COLLECT pass (generating $mem cells).

41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

42. Executing OPT pass (performing simple optimizations).

42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~16 debug messages>

42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

42.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\U7.$procdff$173 ($dff) from module cpu_top.
Setting constant 1-bit at position 1 on $flatten\U7.$procdff$173 ($dff) from module cpu_top.
Setting constant 1-bit at position 2 on $flatten\U7.$procdff$173 ($dff) from module cpu_top.
Setting constant 1-bit at position 3 on $flatten\U7.$procdff$173 ($dff) from module cpu_top.
Setting constant 1-bit at position 4 on $flatten\U7.$procdff$173 ($dff) from module cpu_top.
Setting constant 1-bit at position 5 on $flatten\U7.$procdff$173 ($dff) from module cpu_top.
Setting constant 1-bit at position 6 on $flatten\U7.$procdff$173 ($dff) from module cpu_top.
Setting constant 1-bit at position 7 on $flatten\U7.$procdff$173 ($dff) from module cpu_top.

42.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

42.5. Rerunning OPT passes. (Removed registers in this run.)

42.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

42.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

42.8. Executing OPT_DFF pass (perform DFF optimizations).

42.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

42.10. Finished fast OPT passes.

43. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\U7.$auto$proc_rom.cc:150:do_switch$59 in module \cpu_top:
  created 16 $dff cells and 0 static cells of width 7.
Extracted data FF from read port 0 of cpu_top.$flatten\U7.$auto$proc_rom.cc:150:do_switch$59: $$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \U2.instructions in module \cpu_top:
  created 256 $dff cells and 0 static cells of width 16.
  read interface: 0 $dff and 255 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \U5.memory in module \cpu_top:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

44. Executing OPT pass (performing simple optimizations).

44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~459 debug messages>

44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][3][6]$282:
      Old ports: A=7'0110001, B=7'1000010, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$a$262
      New ports: A=2'01, B=2'10, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$a$262 [1:0]
      New connections: $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$a$262 [6:2] = { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$a$262 [1:0] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$a$262 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][3][5]$279:
      Old ports: A=7'0001000, B=7'1100000, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260 [5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260 [3] }
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260 [6] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260 [4] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260 [2:0] } = { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260 [5] 4'0000 }
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][3][4]$276:
      Old ports: A=7'0000000, B=7'0000100, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$a$259
      New ports: A=1'0, B=1'1, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$a$259 [2]
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$a$259 [6:3] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$a$259 [1:0] } = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][3][3]$273:
      Old ports: A=7'0100000, B=7'0001111, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [0] }
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [6] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [4:1] } = { 2'00 $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [0] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [0] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][3][2]$270:
      Old ports: A=7'1001100, B=7'0100100, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256 [5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256 [3] }
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256 [6] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256 [4] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256 [2:0] } = { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256 [3] 4'0100 }
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][3][1]$267:
      Old ports: A=7'0010010, B=7'0000110, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$b$254
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$b$254 [4] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$b$254 [2] }
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$b$254 [6:5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$b$254 [3] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$b$254 [1:0] } = 5'00010
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][3][0]$264:
      Old ports: A=7'0000001, B=7'1001111, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253
      New ports: A=1'0, B=1'1, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253 [1]
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253 [6:2] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253 [0] } = { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253 [1] 2'00 $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253 [1] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][3][7]$285:
      Old ports: A=7'0110000, B=7'0111000, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$b$263
      New ports: A=1'0, B=1'1, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$b$263 [3]
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$b$263 [6:4] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$b$263 [2:0] } = 6'011000
  Optimizing cells in module \cpu_top.
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$261:
      Old ports: A=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$a$262, B=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$b$263, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$b$251
      New ports: A={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$a$262 [0] 1'0 $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$a$262 [1:0] }, B={ 1'1 $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][3]$b$263 [3] 2'00 }, Y={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$b$251 [4:3] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$b$251 [1:0] }
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$b$251 [6:5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$b$251 [2] } = { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$b$251 [1] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$b$251 [4] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$258:
      Old ports: A=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$a$259, B=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$a$250
      New ports: A={ 2'00 $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$a$259 [2] }, B={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260 [5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][2]$b$260 [3] 1'0 }, Y={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$a$250 [5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$a$250 [3:2] }
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$a$250 [6] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$a$250 [4] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$a$250 [1:0] } = { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][1]$a$250 [5] 3'000 }
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$255:
      Old ports: A=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256, B=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$b$248
      New ports: A={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256 [3] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256 [5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$a$256 [3] 2'10 }, B={ 1'0 $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [0] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [0] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][1]$b$257 [0] }, Y={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$b$248 [6:5] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$b$248 [3:2] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$b$248 [0] }
      New connections: { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$b$248 [4] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$b$248 [1] } = { 1'0 $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$b$248 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$252:
      Old ports: A=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253, B=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$b$254, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$a$247
      New ports: A={ 1'0 $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253 [1] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253 [1] $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$a$253 [1] 1'1 }, B={ $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$b$254 [4] 1'0 $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][2][0]$b$254 [2] 2'10 }, Y=$memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$a$247 [4:0]
      New connections: $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$a$247 [6:5] = { $memory$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdmux[0][1][0]$a$247 [3] 1'0 }
  Optimizing cells in module \cpu_top.
Performed a total of 12 changes.

44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

44.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $flatten\U6.$procmux$96 in front of them:
        $auto$alumacc.cc:485:replace_alu$199
        $auto$alumacc.cc:485:replace_alu$196

44.7. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\U4.$procdff$167 ($dff) from module cpu_top.
Setting constant 1-bit at position 1 on $flatten\U4.$procdff$167 ($dff) from module cpu_top.
Setting constant 0-bit at position 2 on $flatten\U4.$procdff$167 ($dff) from module cpu_top.

44.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 35 unused cells and 858 unused wires.
<suppressed ~69 debug messages>

44.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~27 debug messages>

44.10. Rerunning OPT passes. (Maybe there is more to do..)

44.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/4 on $pmux $flatten\U6.$procmux$96.
    dead port 2/4 on $pmux $flatten\U6.$procmux$96.
    dead port 3/4 on $pmux $flatten\U6.$procmux$96.
Removed 3 multiplexer ports.
<suppressed ~7 debug messages>

44.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
Performed a total of 0 changes.

44.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

44.14. Executing OPT_SHARE pass.

44.15. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $memory\U5.memory[0]$1053 ($dff) from module cpu_top (removing D path).
Handling always-active async load on $flatten\U6.$auto$proc_dlatch.cc:427:proc_dlatch$138 ($dlatch) from module cpu_top (changing to combinatorial circuit).

44.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 5 unused cells and 26 unused wires.
<suppressed ~11 debug messages>

44.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~61 debug messages>

44.18. Rerunning OPT passes. (Maybe there is more to do..)

44.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

44.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
Performed a total of 0 changes.

44.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~140 debug messages>
Removed a total of 28 cells.

44.22. Executing OPT_SHARE pass.

44.23. Executing OPT_DFF pass (perform DFF optimizations).

44.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 1 unused cells and 32 unused wires.
<suppressed ~2 debug messages>

44.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

44.26. Rerunning OPT passes. (Maybe there is more to do..)

44.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

44.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
Performed a total of 0 changes.

44.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

44.30. Executing OPT_SHARE pass.

44.31. Executing OPT_DFF pass (perform DFF optimizations).

44.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

44.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

44.34. Finished OPT passes. (There is nothing left to do.)

45. Executing TECHMAP pass (map to technology primitives).

45.1. Executing Verilog-2005 frontend: /nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

45.2. Continuing TECHMAP pass.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$86918417b1d705351097c6e77e8f74c668cf6343\_90_div for cells of type $div.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$86918417b1d705351097c6e77e8f74c668cf6343\_90_mod for cells of type $mod.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$86918417b1d705351097c6e77e8f74c668cf6343\$__div_mod_trunc for cells of type $__div_mod_trunc.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$neg:Y_WIDTH=32:A_WIDTH=32:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:Y_WIDTH=32:A_WIDTH=32:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:Y_WIDTH=32:A_WIDTH=32:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\$__div_mod_u\WIDTH=32'00000000000000000000000000100000 for cells of type $__div_mod_u.
Using extmapper simplemap for cells of type $or.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=33:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=33:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=33:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=34:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=34:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=34:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=35:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=35:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=35:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=36:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=36:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=36:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=37:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=37:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=37:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=38:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=38:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=38:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=39:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=39:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=39:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=40:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=40:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=40:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=41:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=41:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=41:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=42:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=42:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=42:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=43:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=43:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=43:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=44:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=44:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=44:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=45:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=45:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=45:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=46:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=46:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=46:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=47:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=47:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=47:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=48:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=48:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=48:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=49:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=49:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=49:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=50:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=50:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=50:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=51:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=51:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=51:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=52:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=52:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=52:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=53:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=53:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=53:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=54:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=54:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=54:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=55:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=55:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=55:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=56:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=56:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=56:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=57:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=57:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=57:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=58:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=58:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=58:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=59:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=59:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=59:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=60:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=60:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=60:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=61:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=61:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=61:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=62:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=62:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=62:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=63:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=63:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=63:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$789c344356a154d2afc7b832b41d1067dbc946ba\_90_alu for cells of type $alu.
Using template $paramod$e39069e3f4ee35c1eea86993bd74689959babaab\_90_alu for cells of type $alu.
Using template $paramod$d7aca3dc44b07ff19908fb1a3b606577588c15f1\_90_alu for cells of type $alu.
Using template $paramod$f9e3a3c4b84f99cb56fad07743ec44ad55b11c8b\_90_alu for cells of type $alu.
Using template $paramod$dd5ba471f7dcf35707f23b88cfd15b9582f97277\_90_alu for cells of type $alu.
Using template $paramod$b7531bc0616f8d4cdd8159edd2237c9ddbb2ce01\_90_alu for cells of type $alu.
Using template $paramod$ff8ba121d2f8e85b775c9f35ef677a1a276e7e1b\_90_alu for cells of type $alu.
Using template $paramod$9a66d4bebbc4fab84566caffef9f094a1a467389\_90_alu for cells of type $alu.
Using template $paramod$57bc309a5d8a948cec8981d26d896ee1cbf54d58\_90_alu for cells of type $alu.
Using template $paramod$f94cfdb8ad389f4fc4515bcb65bccd7e2d189e95\_90_alu for cells of type $alu.
Using template $paramod$2a25669ccd39fe7c0fbfb2a4d17416fc78667f00\_90_alu for cells of type $alu.
Using template $paramod$d9397dfdf5f7cf5715aebc9527845402880218a0\_90_alu for cells of type $alu.
Using template $paramod$acc477ace2583cc2ee0cf651c72a385d2bbbe9f1\_90_alu for cells of type $alu.
Using template $paramod$415abdcadc251df4f0f033b62b8f3296b8461b4e\_90_alu for cells of type $alu.
Using template $paramod$6573c1c269218f299badf6e04ca86aa37fdb352c\_90_alu for cells of type $alu.
Using template $paramod$6a21b72c9c0b32e81b169c7e08a4d8b9c462448f\_90_alu for cells of type $alu.
Using template $paramod$324e0706ebb77f1915b22f4a136962ec3fd1d7ff\_90_alu for cells of type $alu.
Using template $paramod$461fc931d630cb01bec1fea87f37fbcc53f6f6a4\_90_alu for cells of type $alu.
Using template $paramod$fe074227b1c5fbaa1ea56076182c29dbcf3a782a\_90_alu for cells of type $alu.
Using template $paramod$85502450775e62e9c6a2fe29020b3433d4335647\_90_alu for cells of type $alu.
Using template $paramod$e32c921f95fe0e2350204f4ecefc9e296355521b\_90_alu for cells of type $alu.
Using template $paramod$05d913fba320393c7e943e625bef3af776153b60\_90_alu for cells of type $alu.
Using template $paramod$8e07e2c0a3efc148d2f3714f3901076678774ed1\_90_alu for cells of type $alu.
Using template $paramod$5b7e592b3c2951af6800b7fd597f66a79b72b91c\_90_alu for cells of type $alu.
Using template $paramod$90182783100594e2dd636a282c4723cfc9adaedd\_90_alu for cells of type $alu.
Using template $paramod$851c5c9b30913ea2deae68e3ca9e9c4e649723bc\_90_alu for cells of type $alu.
Using template $paramod$1445aacdb5f2a1ef9fedf1373097ffa45438211d\_90_alu for cells of type $alu.
Using template $paramod$7add42b712fe5bbbba521e93062103d6bf78a453\_90_alu for cells of type $alu.
Using template $paramod$b6f86f6a0c43c26b22ee55f51e05d5951f0e6562\_90_alu for cells of type $alu.
Using template $paramod$044fdceace8c449ec99f900b42120ac005ff4065\_90_alu for cells of type $alu.
Using template $paramod$b6b58933bcf3c8b9e3e5de18c2637bd0e12c7c47\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111111 for cells of type $lcu.
No more expansions possible.
<suppressed ~37068 debug messages>

46. Executing OPT pass (performing simple optimizations).

46.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~42071 debug messages>

46.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~73425 debug messages>
Removed a total of 24475 cells.

46.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1863 ($_DFFE_PP_) from module cpu_top.

46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 584 unused cells and 31351 unused wires.
<suppressed ~585 debug messages>

46.5. Rerunning OPT passes. (Removed registers in this run.)

46.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~189 debug messages>

46.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~1413 debug messages>
Removed a total of 471 cells.

46.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1826 ($_DFFE_PP_) from module cpu_top (D = $flatten\U7.$procmux$123.Y_B [1], Q = \U7.an [1], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1827 ($_DFFE_PP_) from module cpu_top (D = $flatten\U7.$procmux$123.Y_B [2], Q = \U7.an [2], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1825 ($_DFFE_PP_) from module cpu_top (D = $flatten\U7.$procmux$123.Y_B [0], Q = \U7.an [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1829 ($_DFFE_PP_) from module cpu_top (D = $flatten\U7.$procmux$123.Y_B [4], Q = \U7.an [4], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1830 ($_DFFE_PP_) from module cpu_top (D = $flatten\U7.$procmux$123.Y_B [5], Q = \U7.an [5], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1832 ($_DFFE_PP_) from module cpu_top (D = $flatten\U7.$procmux$123.Y_B [7], Q = \U7.an [7], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1831 ($_DFFE_PP_) from module cpu_top (D = $flatten\U7.$procmux$123.Y_B [6], Q = \U7.an [6], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1828 ($_DFFE_PP_) from module cpu_top (D = $flatten\U7.$procmux$123.Y_B [3], Q = \U7.an [3], rval = 1'1).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1860 ($_DFFE_PP_) from module cpu_top.

46.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 32 unused cells and 270 unused wires.
<suppressed ~33 debug messages>

46.10. Rerunning OPT passes. (Removed registers in this run.)

46.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~248 debug messages>

46.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~1278 debug messages>
Removed a total of 426 cells.

46.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1856 ($_DFFE_PP_) from module cpu_top.

46.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 28 unused cells and 281 unused wires.
<suppressed ~29 debug messages>

46.15. Rerunning OPT passes. (Removed registers in this run.)

46.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~307 debug messages>

46.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~1134 debug messages>
Removed a total of 378 cells.

46.18. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1853 ($_DFFE_PP_) from module cpu_top.

46.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 26 unused cells and 293 unused wires.
<suppressed ~27 debug messages>

46.20. Rerunning OPT passes. (Removed registers in this run.)

46.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~355 debug messages>

46.22. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~1032 debug messages>
Removed a total of 344 cells.

46.23. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1850 ($_DFFE_PP_) from module cpu_top.

46.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 29 unused cells and 302 unused wires.
<suppressed ~30 debug messages>

46.25. Rerunning OPT passes. (Removed registers in this run.)

46.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~402 debug messages>

46.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~888 debug messages>
Removed a total of 296 cells.

46.28. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1847 ($_DFFE_PP_) from module cpu_top.

46.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 29 unused cells and 306 unused wires.
<suppressed ~30 debug messages>

46.30. Rerunning OPT passes. (Removed registers in this run.)

46.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~468 debug messages>

46.32. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~726 debug messages>
Removed a total of 242 cells.

46.33. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1844 ($_DFFE_PP_) from module cpu_top.

46.34. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 25 unused cells and 316 unused wires.
<suppressed ~26 debug messages>

46.35. Rerunning OPT passes. (Removed registers in this run.)

46.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~522 debug messages>

46.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~621 debug messages>
Removed a total of 207 cells.

46.38. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1841 ($_DFFE_PP_) from module cpu_top.

46.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 23 unused cells and 331 unused wires.
<suppressed ~24 debug messages>

46.40. Rerunning OPT passes. (Removed registers in this run.)

46.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~564 debug messages>

46.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~510 debug messages>
Removed a total of 170 cells.

46.43. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1839 ($_DFFE_PP_) from module cpu_top.

46.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 31 unused cells and 339 unused wires.
<suppressed ~32 debug messages>

46.45. Rerunning OPT passes. (Removed registers in this run.)

46.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~612 debug messages>

46.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~327 debug messages>
Removed a total of 109 cells.

46.48. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1837 ($_DFFE_PP_) from module cpu_top.

46.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 16 unused cells and 312 unused wires.
<suppressed ~17 debug messages>

46.50. Rerunning OPT passes. (Removed registers in this run.)

46.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~38 debug messages>

46.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

46.53. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1834 ($_DFFE_PP_) from module cpu_top.

46.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 1 unused cells and 17 unused wires.
<suppressed ~2 debug messages>

46.55. Rerunning OPT passes. (Removed registers in this run.)

46.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~1 debug messages>

46.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

46.58. Executing OPT_DFF pass (perform DFF optimizations).

46.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

46.60. Finished fast OPT passes.

47. Executing ABC pass (technology mapping using ABC).

47.1. Extracting gate netlist of module `\cpu_top' to `<abc-temp-dir>/input.blif'..
Extracted 108 gates and 119 wires to a netlist network with 9 inputs and 26 outputs.

47.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

47.1.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        6
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               AND cells:        6
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               MUX cells:       20
ABC RESULTS:                OR cells:       25
ABC RESULTS:            ANDNOT cells:       20
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:       84
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       26
Removing temp directory.

48. Executing OPT pass (performing simple optimizations).

48.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.
<suppressed ~8 debug messages>

48.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

48.3. Executing OPT_DFF pass (perform DFF optimizations).

48.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 1 unused cells and 77 unused wires.
<suppressed ~2 debug messages>

48.5. Finished fast OPT passes.

49. Executing HIERARCHY pass (managing design hierarchy).

49.1. Analyzing design hierarchy..
Top module:  \cpu_top

49.2. Analyzing design hierarchy..
Top module:  \cpu_top
Removed 0 unused modules.

50. Printing statistics.

=== cpu_top ===

   Number of wires:                126
   Number of wire bits:            819
   Number of public wires:          50
   Number of public wire bits:     693
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                115
     $_ANDNOT_                      19
     $_AND_                          6
     $_DFFE_PP_                      1
     $_DFF_P_                       15
     $_MUX_                         20
     $_NAND_                         2
     $_NOR_                          6
     $_NOT_                          5
     $_ORNOT_                        4
     $_OR_                          25
     $_SDFFCE_PN0N_                  1
     $_SDFFCE_PN1N_                  7
     $_XNOR_                         2
     $_XOR_                          2

51. Executing CHECK pass (checking for obvious problems).
Checking module cpu_top...
Found and reported 0 problems.

52. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/project_5/runs/RUN_2025.06.08_19.44.02/tmp/synthesis/post_techmap.dot'.
Dumping module cpu_top to page 1.

53. Executing SHARE pass (SAT-based resource sharing).

54. Executing OPT pass (performing simple optimizations).

54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu_top.
Performed a total of 0 changes.

54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu_top'.
Removed a total of 0 cells.

54.6. Executing OPT_DFF pass (perform DFF optimizations).

54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..

54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu_top.

54.9. Finished OPT passes. (There is nothing left to do.)

55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 0 unused cells and 43 unused wires.
<suppressed ~43 debug messages>

56. Printing statistics.

=== cpu_top ===

   Number of wires:                 83
   Number of wire bits:            184
   Number of public wires:           7
   Number of public wire bits:      58
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                115
     $_ANDNOT_                      19
     $_AND_                          6
     $_DFFE_PP_                      1
     $_DFF_P_                       15
     $_MUX_                         20
     $_NAND_                         2
     $_NOR_                          6
     $_NOT_                          5
     $_ORNOT_                        4
     $_OR_                          25
     $_SDFFCE_PN0N_                  1
     $_SDFFCE_PN1N_                  7
     $_XNOR_                         2
     $_XOR_                          2

mapping tbuf

57. Executing TECHMAP pass (map to technology primitives).

57.1. Executing Verilog-2005 frontend: /home/talha/volare_pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/talha/volare_pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

57.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

58. Executing SIMPLEMAP pass (map simple cells to gate primitives).

59. Executing TECHMAP pass (map to technology primitives).

59.1. Executing Verilog-2005 frontend: /home/talha/volare_pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/talha/volare_pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

59.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

60. Executing SIMPLEMAP pass (map simple cells to gate primitives).

61. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

61.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\cpu_top':
  mapped 24 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

62. Printing statistics.

=== cpu_top ===

   Number of wires:                100
   Number of wire bits:            201
   Number of public wires:           7
   Number of public wire bits:      58
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                132
     $_ANDNOT_                      19
     $_AND_                          6
     $_MUX_                         37
     $_NAND_                         2
     $_NOR_                          6
     $_NOT_                          5
     $_ORNOT_                        4
     $_OR_                          25
     $_XNOR_                         2
     $_XOR_                          2
     sky130_fd_sc_hd__dfxtp_2       24

[INFO]: USING STRATEGY AREA 0

63. Executing ABC pass (technology mapping using ABC).

63.1. Extracting gate netlist of module `\cpu_top' to `/tmp/yosys-abc-fqr0VZ/input.blif'..
Extracted 108 gates and 127 wires to a netlist network with 17 inputs and 24 outputs.

63.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-fqr0VZ/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-fqr0VZ/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-fqr0VZ/input.blif 
ABC: + read_lib -w /openlane/designs/project_5/runs/RUN_2025.06.08_19.44.02/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.03 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/project_5/runs/RUN_2025.06.08_19.44.02/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.04 sec
ABC: Memory =    9.54 MB. Time =     0.04 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/project_5/runs/RUN_2025.06.08_19.44.02/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/project_5/runs/RUN_2025.06.08_19.44.02/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: Abc_NtkFastExtract: Nodes have duplicated fanins. FX is not performed.
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 10000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 10000 
ABC: Current delay (1399.20 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     64 ( 15.6 %)   Cap = 16.1 ff (  2.5 %)   Area =      497.98 ( 84.4 %)   Delay =  1554.66 ps  ( 34.4 %)               
ABC: Path  0 --       3 : 0    4 pi                       A =   0.00  Df =  42.9  -23.4 ps  S =  65.0 ps  Cin =  0.0 ff  Cout =  12.8 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      42 : 1   10 sky130_fd_sc_hd__buf_1   A =   3.75  Df = 396.7 -164.2 ps  S = 432.1 ps  Cin =  2.1 ff  Cout =  36.5 ff  Cmax = 130.0 ff  G = 1669  
ABC: Path  2 --      47 : 3    8 sky130_fd_sc_hd__o21ai_2 A =   8.76  Df = 755.2  -83.3 ps  S = 557.6 ps  Cin =  4.5 ff  Cout =  49.0 ff  Cmax = 139.2 ff  G = 1061  
ABC: Path  3 --      69 : 3    2 sky130_fd_sc_hd__or3_2   A =   7.51  Df =1170.5 -172.9 ps  S =  99.9 ps  Cin =  1.5 ff  Cout =   9.7 ff  Cmax = 310.4 ff  G =  610  
ABC: Path  4 --      73 : 3    1 sky130_fd_sc_hd__a21oi_2 A =   8.76  Df =1554.7 -300.1 ps  S = 417.8 ps  Cin =  4.6 ff  Cout =  33.4 ff  Cmax = 128.2 ff  G =  733  
ABC: Start-point = pi2 (\U7.digit_counter [3]).  End-point = po7 ($$flatten\U7.$auto$proc_rom.cc:150:do_switch$59$rdreg[0]$d [3]).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   17/   24  lat =    0  nd =    64  edge =    164  area =498.05  delay = 6.00  lev = 6
ABC: + write_blif /tmp/yosys-abc-fqr0VZ/output.blif 

63.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        2
ABC RESULTS:        internal signals:       86
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       24
Removing temp directory.

64. Executing SETUNDEF pass (replace undef values with defined constants).

65. Executing HILOMAP pass (mapping to constant drivers).

66. Executing SPLITNETS pass (splitting up multi-bit signals).

67. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu_top..
Removed 62 unused cells and 254 unused wires.
<suppressed ~94 debug messages>

68. Executing INSBUF pass (insert buffer cells for connected wires).

69. Executing CHECK pass (checking for obvious problems).
Checking module cpu_top...
Found and reported 0 problems.

70. Printing statistics.

=== cpu_top ===

   Number of wires:                 77
   Number of wire bits:             91
   Number of public wires:          13
   Number of public wire bits:      27
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 89
     sky130_fd_sc_hd__a21o_2         2
     sky130_fd_sc_hd__a21oi_2        6
     sky130_fd_sc_hd__a22o_2         1
     sky130_fd_sc_hd__and2_2         1
     sky130_fd_sc_hd__and2b_2        1
     sky130_fd_sc_hd__and3_2         4
     sky130_fd_sc_hd__and3b_2        1
     sky130_fd_sc_hd__buf_1          3
     sky130_fd_sc_hd__conb_1         1
     sky130_fd_sc_hd__dfxtp_2       24
     sky130_fd_sc_hd__inv_2          7
     sky130_fd_sc_hd__mux2_2         2
     sky130_fd_sc_hd__nand2_2       10
     sky130_fd_sc_hd__nor2_2         1
     sky130_fd_sc_hd__nor3_2         1
     sky130_fd_sc_hd__o211a_2        1
     sky130_fd_sc_hd__o21a_2         1
     sky130_fd_sc_hd__o21ai_2        3
     sky130_fd_sc_hd__o21ba_2        2
     sky130_fd_sc_hd__o21bai_2       1
     sky130_fd_sc_hd__o22a_2         5
     sky130_fd_sc_hd__o31ai_2        1
     sky130_fd_sc_hd__o32a_2         2
     sky130_fd_sc_hd__or2_2          6
     sky130_fd_sc_hd__or3_2          1
     sky130_fd_sc_hd__xnor2_2        1

   Chip area for module '\cpu_top': 1012.220800

71. Executing Verilog backend.
Dumping module `\cpu_top'.

72. Executing JSON backend.

End of script. Logfile hash: 91336c9d81, CPU: user 10.03s system 0.25s, MEM: 566.78 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)
Time spent: 50% 65x opt_merge (5 sec), 21% 101x opt_expr (2 sec), ...
